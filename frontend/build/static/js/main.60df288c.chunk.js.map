{"version":3,"sources":["components/Footer/Footer.jsx","constants/userConstants.js","actions/userAction.js","components/Header/Header.jsx","screens/LandingPage/LandingPage.jsx","components/MainScreen.jsx","constants/eventsContants.js","actions/eventsAction.js","components/Loading/Loading.jsx","components/ErroMessage/ErrorMessage.jsx","screens/MyEvents/MyEvents.jsx","screens/LoginScreen/LoginScreen.jsx","screens/RegisterScreen/RegisterScreen.jsx","screens/SingleEvent/CreateEvent.jsx","screens/SingleEvent/SingleEvent.jsx","screens/ProfileScreen/ProfileScreen.jsx","App.js","reportWebVitals.js","store.js","reducers/userReducers.js","reducers/eventReducer.js","index.js"],"names":["Footer","style","width","position","button","display","justifyContent","Container","Row","Col","className","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","login","email","password","dispatch","a","type","config","headers","axios","post","data","payload","localStorage","setItem","JSON","stringify","response","message","register","name","pic","Header","setSearch","history","useHistory","useDispatch","userInfo","useSelector","state","userLogin","logoutHandler","removeItem","push","Navbar","bg","expand","variant","to","Brand","Toggle","Collapse","id","Nav","Form","FormControl","placeholder","onChange","e","target","value","Link","NavDropdown","title","Item","href","Divider","onClick","LandingPage","useEffect","getItem","Button","size","MainScreen","children","EVENTS_LIST_REQUEST","EVENTS_LIST_SUCCESS","EVENTS_LIST_FAIL","EVENTS_CREATE_REQUEST","EVENTS_CREATE_SUCCESS","EVENTS_CREATE_FAIL","EVENTS_UPDATE_REQUEST","EVENTS_UPDATE_SUCCESS","EVENTS_UPDATE_FAIL","EVENTS_DELETE_REQUEST","EVENTS_DELETE_SUCCESS","EVENTS_DELETE_FAIL","deleteEventAction","getState","Authorization","token","delete","Loading","alignItems","height","Spinner","animation","ErrorMessage","Alert","fontSize","MyEvents","search","eventList","loading","error","events","eventDelete","successDelete","success","successCreate","eventCreate","successUpdate","eventUpdate","get","styles","marginLeft","marginBottom","filter","filteredEvent","toLowerCase","includes","reverse","map","event","Accordion","Card","margin","color","textDecoration","flex","cursor","alignSelf","as","eventKey","_id","window","confirm","Body","md","Badge","category","content","createdAt","substring","src","alt","LoginScreen","useState","setEmail","setPassword","submitHandler","preventDefault","onSubmit","Group","controlId","Label","Control","marginTop","RegisterScreen","setName","setPic","confirmpassword","setConfirmPassword","setMessage","picMessage","setPicMessage","userRegister","File","pics","FormData","append","fetch","method","body","then","res","json","console","log","url","toString","catch","err","postDetails","files","label","custom","CreateEvent","setTitle","setContent","setCategory","resetHandler","createEventAction","rows","Date","toLocaleDateString","SingleEvent","match","date","setDate","loadingDelete","errorDelete","params","updatedAt","fetching","put","updateEventAction","ProfileScreen","location","confirmPassword","userUpdate","user","varient","App","s","exact","path","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducer","combineReducers","action","initialState","parse","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60df288c.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <footer style={ {\r\n            width: '100%',\r\n            position: 'relative',\r\n            button: 0,\r\n            display: 'flex',\r\n            justifyContent: 'center'\r\n        } }>\r\n            <Container>\r\n                <Row>\r\n                    <Col className='text-center py-3'>Developed with passion</Col>\r\n                </Row>\r\n            </Container>\r\n        </footer>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","\r\nexport const USER_LOGIN_REQUEST = \"USER_LOGIN_REQUEST\";\r\nexport const USER_LOGIN_SUCCESS = \"USER_LOGIN_SUCCESS\";\r\nexport const USER_LOGIN_FAIL = \"USER_LOGIN_FAIL\";\r\nexport const USER_LOGOUT = \"USER_LOGOUT\";\r\n\r\nexport const USER_REGISTER_REQUEST = \"USER_REGISTER_REQUEST\";\r\nexport const USER_REGISTER_SUCCESS = \"USER_REGISTER_SUCCESS\";\r\nexport const USER_REGISTER_FAIL = \"USER_REGISTER_FAIL\";\r\n\r\nexport const USER_UPDATE_REQUEST = \"USER_UPDATE_REQUEST\";\r\nexport const USER_UPDATE_SUCCESS = \"USER_UPDATE_SUCCESS\";\r\nexport const USER_UPDATE_FAIL = \"USER_UPDATE_FAIL\";","import axios from 'axios';\r\nimport {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n} from './../constants/userConstants';\r\n\r\nexport const login = ( email, password ) => async ( dispatch ) => {\r\n    try {\r\n        dispatch( { type: USER_LOGIN_REQUEST } );\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/users/login\",\r\n            { email, password },\r\n            config\r\n        );\r\n\r\n        dispatch( { type: USER_LOGIN_SUCCESS, payload: data } );\r\n\r\n        localStorage.setItem( \"userInfo\", JSON.stringify( data ) );\r\n    } catch ( error ) {\r\n        dispatch( {\r\n            type: USER_LOGIN_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        } );\r\n    }\r\n};\r\n\r\n\r\nexport const logout = () => async ( dispatch ) => {\r\n    localStorage.removeItem( \"userInfo\" );\r\n    dispatch( { type: USER_LOGOUT } );\r\n};\r\n\r\n\r\nexport const register = ( name, email, password, pic ) => async ( dispatch ) => {\r\n    try {\r\n        dispatch( { type: USER_REGISTER_REQUEST } );\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            \"/api/users\",\r\n            { name, pic, email, password },\r\n            config\r\n        );\r\n\r\n        dispatch( { type: USER_REGISTER_SUCCESS, payload: data } );\r\n\r\n        dispatch( { type: USER_LOGIN_SUCCESS, payload: data } );\r\n\r\n        localStorage.setItem( \"userInfo\", JSON.stringify( data ) );\r\n    } catch ( error ) {\r\n        dispatch( {\r\n            type: USER_REGISTER_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        } );\r\n    }\r\n};\r\n\r\n\r\nexport const updateProfile = ( user ) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch( { type: USER_UPDATE_REQUEST } );\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${ userInfo.token }`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post( \"/api/users/profile\", user, config );\r\n\r\n        dispatch( { type: USER_UPDATE_SUCCESS, payload: data } );\r\n\r\n        dispatch( { type: USER_LOGIN_SUCCESS, payload: data } );\r\n\r\n        localStorage.setItem( \"userInfo\", JSON.stringify( data ) );\r\n    } catch ( error ) {\r\n        dispatch( {\r\n            type: USER_UPDATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message,\r\n        } );\r\n    }\r\n};","import React from 'react';\r\nimport { Navbar, Nav, NavDropdown, Form, FormControl, Container } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { logout } from './../../actions/userAction';\r\nfunction Header ( { setSearch } ) {\r\n\r\n    const history = useHistory();\r\n\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector( state => state.userLogin );\r\n    const { userInfo } = userLogin;\r\n\r\n    const logoutHandler = async () => {\r\n        await dispatch( logout() );\r\n        history.push( '/' );\r\n    };\r\n\r\n\r\n    return (\r\n        <Navbar bg=\"primary\" expand=\"lg\" variant='dark'>\r\n            <Container>\r\n                <Link to='/'>\r\n                    <Navbar.Brand>EvenX</Navbar.Brand>\r\n                </Link>\r\n                <Navbar.Toggle aria-controls=\"navbarScroll\" />\r\n                <Navbar.Collapse id=\"navbarScroll\">\r\n                    <Nav className='m-auto'>\r\n                        <Form className=\"d-flex\">\r\n                            <FormControl\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                className=\"mr-2\"\r\n                                aria-label=\"Search\"\r\n                                onChange={ ( e ) => setSearch( e.target.value ) }\r\n                            />\r\n                        </Form>\r\n                    </Nav>\r\n                    { userInfo ? <Nav>\r\n                        <Nav.Link>\r\n                            <Link to='/myevents'>\r\n                                My Events\r\n                            </Link>\r\n                        </Nav.Link>\r\n                        <NavDropdown title={ userInfo?.name } id=\"navbarScrollingDropdown\">\r\n                            <NavDropdown.Item href=\"/profile\">My Profile</NavDropdown.Item>\r\n                            <NavDropdown.Divider />\r\n                            <NavDropdown.Item\r\n                                onClick={ logoutHandler }\r\n                            >\r\n                                Logout\r\n                            </NavDropdown.Item>\r\n                        </NavDropdown>\r\n                    </Nav> : <Nav.Link>\r\n                        <Link to='/login'>\r\n                            Login\r\n                        </Link>\r\n                    </Nav.Link> }\r\n\r\n                </Navbar.Collapse>\r\n            </Container>\r\n        </Navbar>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect } from 'react';\r\nimport { Button, Container, Row } from 'react-bootstrap';\r\nimport './LandingPage.css';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst LandingPage = () => {\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect( () => {\r\n        const userInfo = localStorage.getItem( 'userInfo' );\r\n        if ( userInfo ) {\r\n            history.push( '/myevents' );\r\n        }\r\n    }, [ history ] );\r\n\r\n\r\n    return (\r\n        <div className='main'>\r\n            <Container>\r\n                <Row><div className='intro-text'>\r\n                    <div>\r\n                        <h1 className='title'>Welcome to EvenX</h1>\r\n                        <p className='subtitle'>A place to manage events</p>\r\n                    </div>\r\n                    <div className='buttonContainer'>\r\n                        <a href='/login'>\r\n                            <Button\r\n                                size='lg'\r\n                                className='landingbutton'\r\n                            >\r\n                                Login\r\n                            </Button>\r\n                        </a>\r\n                        <a href='/register'>\r\n                            <Button\r\n                                size='lg'\r\n                                className='landingbutton'\r\n                                variant='outline-primary'\r\n                            >\r\n                                Register\r\n                            </Button>\r\n                        </a>\r\n                    </div>\r\n                </div></Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LandingPage;\r\n","import React from 'react';\r\nimport { Container, Row } from 'react-bootstrap';\r\n\r\nimport './MainScreen.css';\r\n\r\nconst MainScreen = ( { title, children } ) => {\r\n    return (\r\n        <div className='mainbackground'>\r\n            <Container>\r\n                <Row>\r\n                    <div className='page'>\r\n                        {\r\n                            title && ( <>\r\n                                <h1 className='heading'>{ title }</h1>\r\n                                <hr />\r\n                            </> )\r\n                        }\r\n                        { children }\r\n                    </div>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainScreen;\r\n","export const EVENTS_LIST_REQUEST = \"EVENTS_LIST_REQUEST\";\r\nexport const EVENTS_LIST_SUCCESS = \"EVENTS_LIST_SUCCESS\";\r\nexport const EVENTS_LIST_FAIL = \"EVENTS_LIST_FAIL\";\r\n\r\nexport const EVENTS_CREATE_REQUEST = \"EVENTS_CREATE_REQUEST\";\r\nexport const EVENTS_CREATE_SUCCESS = \"EVENTS_CREATE_SUCCESS\";\r\nexport const EVENTS_CREATE_FAIL = \"EVENTS_CREATE_FAIL\";\r\n\r\nexport const EVENTS_UPDATE_REQUEST = \"EVENTS_UPDATE_REQUEST\";\r\nexport const EVENTS_UPDATE_SUCCESS = \"EVENTS_UPDATE_SUCCESS\";\r\nexport const EVENTS_UPDATE_FAIL = \"EVENTS_UPDATE_FAIL\";\r\n\r\nexport const EVENTS_DELETE_REQUEST = \"EVENTS_DELETE_REQUEST\";\r\nexport const EVENTS_DELETE_SUCCESS = \"EVENTS_DELETE_SUCCESS\";\r\nexport const EVENTS_DELETE_FAIL = \"EVENTS_DELETE_FAIL\";","import {\r\n    EVENTS_CREATE_FAIL,\r\n    EVENTS_CREATE_REQUEST,\r\n    EVENTS_CREATE_SUCCESS,\r\n    EVENTS_DELETE_FAIL,\r\n    EVENTS_DELETE_REQUEST,\r\n    EVENTS_DELETE_SUCCESS,\r\n    EVENTS_LIST_FAIL,\r\n    EVENTS_LIST_REQUEST,\r\n    EVENTS_LIST_SUCCESS,\r\n    EVENTS_UPDATE_FAIL,\r\n    EVENTS_UPDATE_REQUEST,\r\n    EVENTS_UPDATE_SUCCESS,\r\n} from \"../constants/eventsContants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listEvents = () => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch( {\r\n            type: EVENTS_LIST_REQUEST,\r\n        } );\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${ userInfo.token }`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get( `/api/events`, config );\r\n\r\n        dispatch( {\r\n            type: EVENTS_LIST_SUCCESS,\r\n            payload: data,\r\n        } );\r\n    } catch ( error ) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch( {\r\n            type: EVENTS_LIST_FAIL,\r\n            payload: message,\r\n        } );\r\n    }\r\n};\r\n\r\nexport const createEventAction = ( title, content, category, pic, ) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch( {\r\n            type: EVENTS_CREATE_REQUEST,\r\n        } );\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${ userInfo.token }`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            `/api/events/create`,\r\n            { title, content, category, pic },\r\n            config\r\n        );\r\n\r\n        dispatch( {\r\n            type: EVENTS_CREATE_SUCCESS,\r\n            payload: data,\r\n        } );\r\n    } catch ( error ) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch( {\r\n            type: EVENTS_CREATE_FAIL,\r\n            payload: message,\r\n        } );\r\n    }\r\n};\r\n\r\nexport const deleteEventAction = ( id ) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch( {\r\n            type: EVENTS_DELETE_REQUEST,\r\n        } );\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${ userInfo.token }`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.delete( `/api/events/${ id }`, config );\r\n\r\n        dispatch( {\r\n            type: EVENTS_DELETE_SUCCESS,\r\n            payload: data,\r\n        } );\r\n    } catch ( error ) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch( {\r\n            type: EVENTS_DELETE_FAIL,\r\n            payload: message,\r\n        } );\r\n    }\r\n};\r\n\r\nexport const updateEventAction = ( id, title, content, category, pic ) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch( {\r\n            type: EVENTS_UPDATE_REQUEST,\r\n        } );\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${ userInfo.token }`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/events/${ id }`,\r\n            { title, content, category, pic },\r\n            config\r\n        );\r\n\r\n        dispatch( {\r\n            type: EVENTS_UPDATE_SUCCESS,\r\n            payload: data,\r\n        } );\r\n    } catch ( error ) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch( {\r\n            type: EVENTS_UPDATE_FAIL,\r\n            payload: message,\r\n        } );\r\n    }\r\n};","import React from 'react';\r\nimport { Spinner } from \"react-bootstrap\";\r\n\r\nconst Loading = ( { size = 100 } ) => {\r\n    return (\r\n        <div\r\n            style={ {\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n            } }\r\n        >\r\n            <Spinner\r\n                style={ {\r\n                    width: size,\r\n                    height: size,\r\n                } }\r\n                animation=\"border\"\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Alert } from \"react-bootstrap\";\r\n\r\nconst ErrorMessage = ( { variant = \"info\", children } ) => {\r\n    return (\r\n        <Alert variant={ variant } style={ { fontSize: 20 } }>\r\n            <strong>{ children }</strong>\r\n        </Alert>\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { useEffect } from 'react';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport { Link } from 'react-router-dom';\r\nimport { Accordion, Badge, Button, Card, Col, Row } from 'react-bootstrap';\r\n\r\nimport './MyEvents.css';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteEventAction, listEvents } from \"../../actions/eventsAction\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport ErrorMessage from \"../../components/ErroMessage/ErrorMessage\";\r\n\r\n\r\nconst MyEvents = ( { history, search } ) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const eventList = useSelector( ( state ) => state.eventList );\r\n    const { loading, error, events } = eventList;\r\n\r\n\r\n    const userLogin = useSelector( ( state ) => state.userLogin );\r\n    const { userInfo } = userLogin;\r\n\r\n    const eventDelete = useSelector( ( state ) => state.eventDelete );\r\n    const {\r\n        loading: loadingDelete,\r\n        error: errorDelete,\r\n        success: successDelete,\r\n    } = eventDelete;\r\n\r\n    const eventCreate = useSelector( ( state ) => state.eventCreate );\r\n    const { success: successCreate } = eventCreate;\r\n\r\n    const eventUpdate = useSelector( ( state ) => state.eventUpdate );\r\n    const { success: successUpdate } = eventUpdate;\r\n\r\n    useEffect( () => {\r\n        dispatch( listEvents() );\r\n        if ( !userInfo ) {\r\n            history?.push( \"/\" );\r\n        }\r\n    }, [\r\n        dispatch,\r\n        history,\r\n        userInfo,\r\n        successDelete,\r\n        successCreate,\r\n        successUpdate,\r\n    ] );\r\n\r\n    const deleteHandler = ( id ) => {\r\n        if ( window.confirm( \"Are you sure?\" ) ) {\r\n            dispatch( deleteEventAction( id ) );\r\n        }\r\n    };\r\n    return (\r\n        <MainScreen title={ `Hi ${ userInfo?.name }.` }>\r\n            <Link to='/createevent'>\r\n                <Button\r\n                    styles={ { marginLeft: 10, marginBottom: 6 } }\r\n                    size='lg'\r\n                >\r\n                    Create New Event\r\n                </Button>\r\n            </Link>\r\n            { error && <ErrorMessage variant='danger' /> }\r\n            { loading && <Loading /> }\r\n            { events && events.filter( ( filteredEvent ) =>\r\n                filteredEvent.title.toLowerCase().includes( search.toLowerCase() ) ).reverse().map( ( event ) => {\r\n                    return <Accordion key={ event._id }>\r\n                        <Card style={ { margin: 10 } }>\r\n                            <Card.Header style={ { display: 'flex' } }>\r\n                                <span style={ {\r\n                                    color: 'black',\r\n                                    textDecoration: 'none',\r\n                                    flex: 1,\r\n                                    cursor: 'pointer',\r\n                                    alignSelf: 'center',\r\n                                    fontSize: 18,\r\n\r\n                                } }\r\n                                >\r\n                                    <Accordion.Toggle\r\n                                        as={ Link }\r\n                                        variant='link'\r\n                                        eventKey='0'\r\n                                    >\r\n                                        { event.title }\r\n                                    </Accordion.Toggle>\r\n                                </span>\r\n                                <div>\r\n                                    <Button\r\n                                        href={ `/event/${ event._id }` }\r\n                                    >\r\n                                        Edit\r\n                                    </Button>\r\n                                    <Button\r\n                                        className='mx-2'\r\n                                        variant='danger'\r\n                                        onClick={ () => deleteHandler( event._id ) }\r\n                                    >\r\n                                        Delete</Button>\r\n                                </div>\r\n                            </Card.Header>\r\n                            <Accordion.Collapse eventKey='0'>\r\n                                <Card.Body>\r\n                                    <Row className=\"eventBodyContainer\">\r\n                                        <Col md={ 6 }>\r\n                                            <h4>\r\n                                                <Badge variant='success'> Event category: { event.category }</Badge>\r\n                                            </h4>\r\n                                            <blockquote className=\"blockquote mb-0\">\r\n                                                <p>\r\n                                                    { event.content }\r\n                                                </p>\r\n                                                <footer className=\"blockquote-footer\">\r\n                                                    Created on{ \" \" }\r\n                                                    <cite title=\"Source Title\">\r\n                                                        { event.createdAt.substring( 0, 10 ) }\r\n                                                    </cite>\r\n                                                </footer>\r\n                                            </blockquote>\r\n                                        </Col>\r\n                                        <Col\r\n                                            style={ {\r\n                                                display: \"flex\",\r\n                                                alignItems: \"center\",\r\n                                                justifyContent: \"center\",\r\n                                            } }\r\n                                        >\r\n                                            <img\r\n                                                src={ event.pic }\r\n                                                alt={ event.name }\r\n                                                className=\"eventPic\"\r\n                                                style={ { width: 420, height: 420 } }\r\n                                            />\r\n                                        </Col>\r\n                                    </Row>\r\n                                </Card.Body>\r\n                            </Accordion.Collapse>\r\n                        </Card>\r\n                    </Accordion>;\r\n                } ) }\r\n        </MainScreen >\r\n    );\r\n};\r\n\r\nexport default MyEvents;\r\n","import React, { useState, useEffect } from 'react';\r\nimport MainScreen from './../../components/MainScreen';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport './LoginScreen.css';\r\nimport Loading from './../../components/Loading/Loading';\r\nimport ErrorMessage from './../../components/ErroMessage/ErrorMessage';\r\nimport { login } from './../../actions/userAction';\r\n\r\n\r\nconst LoginScreen = () => {\r\n    const [ email, setEmail ] = useState( '' );\r\n    const [ password, setPassword ] = useState( '' );\r\n\r\n    const dispatch = useDispatch();\r\n    const userLogin = useSelector( ( state ) => state.userLogin );\r\n    const { loading, error, userInfo } = userLogin;\r\n\r\n    const history = useHistory();\r\n\r\n    useEffect( () => {\r\n        if ( userInfo ) {\r\n            history.push( '/myevents' );\r\n        }\r\n    }, [ history, userInfo ] );\r\n\r\n    const submitHandler = async ( e ) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( login( email, password ) );\r\n    };\r\n\r\n\r\n\r\n\r\n    return (\r\n        <MainScreen title='LOGIN'>\r\n            <div className=\"loginContainer\">\r\n                { error && <ErrorMessage variant=\"danger\">{ error }</ErrorMessage> }\r\n                { loading && <Loading /> }\r\n                <Form onSubmit={ submitHandler }>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address: use \"t1@email.com\"</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            value={ email }\r\n                            placeholder=\"Enter email\"\r\n                            onChange={ ( e ) => setEmail( e.target.value ) }\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password: use \"1234\"</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            value={ password }\r\n                            placeholder=\"Password\"\r\n                            onChange={ ( e ) => setPassword( e.target.value ) }\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" style={ { marginTop: 10 } }>\r\n                        Submit\r\n                    </Button>\r\n                </Form>\r\n                <Row className=\"py-3\">\r\n                    <Col style={ { fontSize: 24 } }>\r\n                        New User ? <Link to=\"/register\" style={ { color: '#158CBA' } }> Register Here</Link>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </MainScreen>\r\n    );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport ErrorMessage from './../../components/ErroMessage/ErrorMessage';\r\nimport Loading from './../../components/Loading/Loading';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { register } from './../../actions/userAction';\r\n\r\nconst RegisterScreen = () => {\r\n\r\n\r\n    const [ email, setEmail ] = useState( \"\" );\r\n    const [ name, setName ] = useState( \"\" );\r\n    const [ pic, setPic ] = useState(\r\n        \"https://icon-library.com/images/anonymous-avatar-icon/anonymous-avatar-icon-25.jpg\"\r\n    );\r\n    const [ password, setPassword ] = useState( \"\" );\r\n    const [ confirmpassword, setConfirmPassword ] = useState( \"\" );\r\n    const [ message, setMessage ] = useState( null );\r\n    const [ picMessage, setPicMessage ] = useState( null );\r\n\r\n    const dispatch = useDispatch();\r\n    const userRegister = useSelector( ( state ) => state.userRegister );\r\n    const { loading, error, userInfo } = userRegister;\r\n\r\n    const history = useHistory();\r\n\r\n\r\n    useEffect( () => {\r\n        if ( userInfo ) {\r\n            history.push( '/myevents' );\r\n        }\r\n    }, [ history, userInfo ] );\r\n\r\n\r\n    const submitHandler = async ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( password !== confirmpassword ) {\r\n            setMessage( 'Passwords do not match' );\r\n        } else {\r\n            dispatch( register( name, email, password, pic ) );\r\n        }\r\n    };\r\n\r\n\r\n    const postDetails = ( pics ) => {\r\n        if ( !pics ) {\r\n            return setPicMessage( 'Please select an image' );\r\n        }\r\n        setPicMessage( null );\r\n\r\n        if ( pics.type === 'image/jpeg' || pics.type === 'image/png' ) {\r\n            const data = new FormData();\r\n            data.append( 'file', pics );\r\n            data.append( 'upload_preset', 'evenx' );\r\n            data.append( 'cloud_name', 'dyl8nylbd' );\r\n            fetch( 'https://api.cloudinary.com/v1_1/dyl8nylbd/image/upload', {\r\n                method: 'post',\r\n                body: data\r\n            } ).then( ( res ) => res.json() ).then( ( data ) => {\r\n                console.log( data );\r\n                setPic( data.url.toString() );\r\n            } ).catch( ( err ) => {\r\n                console.log( err );\r\n            } );\r\n        } else {\r\n            return setPicMessage( 'Please select an image' );\r\n        }\r\n\r\n    };\r\n\r\n    return (\r\n        <MainScreen title=\"REGISTER\">\r\n            <div className=\"loginContainer\">\r\n                { error && <ErrorMessage variant=\"danger\">{ error }</ErrorMessage> }\r\n                { message && <ErrorMessage variant=\"danger\">{ message }</ErrorMessage> }\r\n                { loading && <Loading /> }\r\n                <Form onSubmit={ submitHandler }>\r\n                    <Form.Group controlId=\"name\">\r\n                        <Form.Label>Name</Form.Label>\r\n                        <Form.Control\r\n                            type=\"name\"\r\n                            value={ name }\r\n                            placeholder=\"Enter name\"\r\n                            onChange={ ( e ) => setName( e.target.value ) }\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label>Email address</Form.Label>\r\n                        <Form.Control\r\n                            type=\"email\"\r\n                            value={ email }\r\n                            placeholder=\"Enter email\"\r\n                            onChange={ ( e ) => setEmail( e.target.value ) }\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"formBasicPassword\">\r\n                        <Form.Label>Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            value={ password }\r\n                            placeholder=\"Password\"\r\n                            onChange={ ( e ) => setPassword( e.target.value ) }\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Form.Group controlId=\"confirmPassword\">\r\n                        <Form.Label>Confirm Password</Form.Label>\r\n                        <Form.Control\r\n                            type=\"password\"\r\n                            value={ confirmpassword }\r\n                            placeholder=\"Confirm Password\"\r\n                            onChange={ ( e ) => setConfirmPassword( e.target.value ) }\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    { picMessage && (\r\n                        <ErrorMessage variant=\"danger\">{ picMessage }</ErrorMessage>\r\n                    ) }\r\n                    <Form.Group controlId=\"pic\">\r\n                        <Form.Label>Profile Picture</Form.Label>\r\n                        <Form.File\r\n                            onChange={ ( e ) => postDetails( e.target.files[ 0 ] ) }\r\n                            id=\"custom-file\"\r\n                            type=\"image/png\"\r\n                            label=\"Upload Profile Picture\"\r\n                            custom\r\n                        />\r\n                    </Form.Group>\r\n\r\n                    <Button variant=\"primary\" type=\"submit\" style={ { marginTop: 10 } }>\r\n                        Register\r\n                    </Button>\r\n                </Form>\r\n                <Row className=\"py-3\">\r\n                    <Col style={ { fontSize: 24 } }>\r\n                        Have an Account ? <Link to=\"/login\" style={ { color: '#158CBA' } }>Login</Link>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </MainScreen>\r\n    );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { Button, Card, Form, Col, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createEventAction } from \"../../actions/eventsAction\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport ErrorMessage from \"../../components/ErroMessage/ErrorMessage\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nimport './SingleEvent.css';\r\n\r\nfunction CreateEvent ( { history } ) {\r\n    const [ title, setTitle ] = useState( \"\" );\r\n    const [ content, setContent ] = useState( \"\" );\r\n    const [ category, setCategory ] = useState( \"\" );\r\n    const [ pic, setPic ] = useState(\r\n        \"https://res.cloudinary.com/practicaldev/image/fetch/s--P-zvMTgt--/c_imagga_scale,f_auto,fl_progressive,h_900,q_auto,w_1600/https://dev-to-uploads.s3.amazonaws.com/i/qyix6eyhrnc8x9c44yp2.jpg\"\r\n    );\r\n    const [ picMessage, setPicMessage ] = useState( null );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const eventCreate = useSelector( ( state ) => state.eventCreate );\r\n    const { loading, error, event } = eventCreate;\r\n\r\n    console.log( event );\r\n    console.log( pic );\r\n\r\n    const resetHandler = () => {\r\n        setTitle( \"\" );\r\n        setCategory( \"\" );\r\n        setContent( \"\" );\r\n    };\r\n\r\n\r\n\r\n    const postDetails = ( pics ) => {\r\n        if ( !pics ) {\r\n            return setPicMessage( 'Please select an image' );\r\n        }\r\n        setPicMessage( null );\r\n\r\n        if ( pics.type === 'image/jpeg' || pics.type === 'image/png' ) {\r\n            const data = new FormData();\r\n            data.append( 'file', pics );\r\n            data.append( 'upload_preset', 'eventx' );\r\n            data.append( 'cloud_name', 'dyl8nylbd' );\r\n            fetch( 'https://api.cloudinary.com/v1_1/dyl8nylbd/image/upload', {\r\n                method: 'post',\r\n                body: data\r\n            } ).then( ( res ) => res.json() ).then( ( data ) => {\r\n                console.log( data );\r\n                setPic( data.url.toString() );\r\n            } ).catch( ( err ) => {\r\n                console.log( err );\r\n            } );\r\n        } else {\r\n            return setPicMessage( 'Please select an image' );\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const submitHandler = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( createEventAction( title, content, category, pic ) );\r\n        if ( !title || !content || !category ) return;\r\n\r\n        resetHandler();\r\n        history.push( \"/myevents\" );\r\n    };\r\n\r\n    useEffect( () => { }, [] );\r\n\r\n    return (\r\n        <MainScreen title=\"Create an Event\">\r\n            <Card>\r\n                <Card.Header>Create a new Event</Card.Header>\r\n                <Card.Body>\r\n                    <Row className=\"eventContainer\">\r\n                        <Col md={ 6 }>\r\n                            <Form onSubmit={ submitHandler }>\r\n                                { error && <ErrorMessage variant=\"danger\">{ error }</ErrorMessage> }\r\n                                <Form.Group controlId=\"title\">\r\n                                    <Form.Label>Title</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"title\"\r\n                                        value={ title }\r\n                                        placeholder=\"Enter the title\"\r\n                                        onChange={ ( e ) => setTitle( e.target.value ) }\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"content\">\r\n                                    <Form.Label>Content</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"textarea\"\r\n                                        value={ content }\r\n                                        placeholder=\"Enter the content\"\r\n                                        rows={ 4 }\r\n                                        onChange={ ( e ) => setContent( e.target.value ) }\r\n                                    />\r\n                                </Form.Group>\r\n                                { content && (\r\n                                    <Card>\r\n                                        <Card.Header>Event Preview</Card.Header>\r\n                                        <Card.Body>\r\n                                            <ReactMarkdown>{ content }</ReactMarkdown>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                ) }\r\n\r\n                                <Form.Group controlId=\"content\">\r\n                                    <Form.Label>Category</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"content\"\r\n                                        value={ category }\r\n                                        placeholder=\"Enter the Category\"\r\n                                        onChange={ ( e ) => setCategory( e.target.value ) }\r\n                                    />\r\n                                </Form.Group>\r\n                                { picMessage && (\r\n                                    <ErrorMessage variant=\"danger\">{ picMessage }</ErrorMessage>\r\n                                ) }\r\n                                <Form.Group controlId=\"pic\">\r\n                                    <Form.Label>Event Picture</Form.Label>\r\n                                    <Form.File\r\n                                        onChange={ ( e ) => postDetails( e.target.files[ 0 ] ) }\r\n                                        id=\"custom-file\"\r\n                                        type=\"image/png\"\r\n                                        label=\"Upload Event Picture\"\r\n                                        custom\r\n                                    />\r\n                                </Form.Group>\r\n                                { loading && <Loading size={ 50 } /> }\r\n                                <Button type=\"submit\" variant=\"primary\" style={ { marginTop: 10 } }>\r\n                                    Create Event\r\n                                </Button>\r\n                                <Button className=\"mx-2\" onClick={ resetHandler } variant=\"danger\" style={ { marginTop: 10 } } >\r\n                                    Reset Fields\r\n                                </Button>\r\n                            </Form>\r\n                        </Col>\r\n                        <Col\r\n                            style={ {\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"center\",\r\n                            } }\r\n                        >\r\n                            <img src={ pic } alt={ title } className=\"eventPic\" />\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-muted\">\r\n                    Creating on - { new Date().toLocaleDateString() }\r\n                </Card.Footer>\r\n            </Card>\r\n        </MainScreen>\r\n    );\r\n}\r\n\r\nexport default CreateEvent;;","import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport axios from \"axios\";\r\nimport { Button, Card, Form, Row, Col } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteEventAction, updateEventAction } from \"../../actions/eventsAction\";\r\nimport ErrorMessage from \"../../components/ErroMessage/ErrorMessage\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nfunction SingleEvent ( { match, history } ) {\r\n    const [ title, setTitle ] = useState();\r\n    const [ content, setContent ] = useState();\r\n    const [ category, setCategory ] = useState();\r\n    const [ date, setDate ] = useState( \"\" );\r\n    const [ pic, setPic ] = useState();\r\n    const [ picMessage, setPicMessage ] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const eventUpdate = useSelector( ( state ) => state.eventUpdate );\r\n    const { loading, error } = eventUpdate;\r\n\r\n    const eventDelete = useSelector( ( state ) => state.eventDelete );\r\n    const { loading: loadingDelete, error: errorDelete } = eventDelete;\r\n\r\n    const deleteHandler = ( id ) => {\r\n        if ( window.confirm( \"Are you sure?\" ) ) {\r\n            dispatch( deleteEventAction( id ) );\r\n        }\r\n        history.push( \"/myevents\" );\r\n    };\r\n\r\n    useEffect( () => {\r\n        const fetching = async () => {\r\n            const { data } = await axios.get( `/api/events/${ match.params.id }` );\r\n\r\n            setTitle( data.title );\r\n            setContent( data.content );\r\n            setCategory( data.category );\r\n            setDate( data.updatedAt );\r\n            setPic( data.pic );\r\n        };\r\n\r\n        fetching();\r\n    }, [ match.params.id, date ] );\r\n\r\n    const resetHandler = () => {\r\n        setTitle( \"\" );\r\n        setCategory( \"\" );\r\n        setContent( \"\" );\r\n    };\r\n\r\n    const postDetails = ( pics ) => {\r\n        setPicMessage( null );\r\n        if ( pics.type === \"image/jpeg\" || pics.type === \"image/png\" ) {\r\n            const data = new FormData();\r\n            data.append( \"file\", pics );\r\n            data.append( \"upload_preset\", \"eventx\" );\r\n            data.append( \"cloud_name\", \"dyl8nylbd\" );\r\n            fetch( \"https://api.cloudinary.com/v1_1/dyl8nylbd/image/upload\", {\r\n                method: \"post\",\r\n                body: data,\r\n            } )\r\n                .then( ( res ) => res.json() )\r\n                .then( ( data ) => {\r\n                    setPic( data.url.toString() );\r\n                    console.log( pic );\r\n                } )\r\n                .catch( ( err ) => {\r\n                    console.log( err );\r\n                } );\r\n        } else {\r\n            return setPicMessage( \"Please Select an Image\" );\r\n        }\r\n    };\r\n\r\n    const updateHandler = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( updateEventAction( match.params.id, title, content, category, pic ) );\r\n        if ( !title || !content || !category || !pic ) return;\r\n\r\n        resetHandler();\r\n        history.push( \"/myevents\" );\r\n    };\r\n\r\n    return (\r\n        <MainScreen title=\"Edit Event\">\r\n            <Card>\r\n                <Card.Header>Edit your Event</Card.Header>\r\n                <Card.Body>\r\n                    <Row className=\"eventContainer\">\r\n                        <Col md={ 6 }>\r\n                            <Form onSubmit={ updateHandler }>\r\n                                { loadingDelete && <Loading /> }\r\n                                { error && <ErrorMessage variant=\"danger\">{ error }</ErrorMessage> }\r\n                                { errorDelete && (\r\n                                    <ErrorMessage variant=\"danger\">{ errorDelete }</ErrorMessage>\r\n                                ) }\r\n                                <Form.Group controlId=\"title\">\r\n                                    <Form.Label>Title</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"title\"\r\n                                        placeholder=\"Enter the title\"\r\n                                        value={ title }\r\n                                        onChange={ ( e ) => setTitle( e.target.value ) }\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"content\">\r\n                                    <Form.Label>Content</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"textarea\"\r\n                                        placeholder=\"Enter the content\"\r\n                                        rows={ 4 }\r\n                                        value={ content }\r\n                                        onChange={ ( e ) => setContent( e.target.value ) }\r\n                                    />\r\n                                </Form.Group>\r\n                                { content && (\r\n                                    <Card>\r\n                                        <Card.Header>Event Preview</Card.Header>\r\n                                        <Card.Body>\r\n                                            <ReactMarkdown>{ content }</ReactMarkdown>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                ) }\r\n\r\n                                <Form.Group controlId=\"content\">\r\n                                    <Form.Label>Category</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"content\"\r\n                                        placeholder=\"Enter the Category\"\r\n                                        value={ category }\r\n                                        onChange={ ( e ) => setCategory( e.target.value ) }\r\n                                    />\r\n                                </Form.Group>\r\n                                { picMessage && (\r\n                                    <ErrorMessage variant=\"danger\">{ picMessage }</ErrorMessage>\r\n                                ) }\r\n                                <Form.Group controlId=\"pic\">\r\n                                    <Form.Label>Change Event Picture</Form.Label>\r\n                                    <Form.File\r\n                                        onChange={ ( e ) => postDetails( e.target.files[ 0 ] ) }\r\n                                        id=\"custom-file\"\r\n                                        type=\"image/png\"\r\n                                        label=\"Upload Event Picture\"\r\n                                        custom\r\n                                    />\r\n                                </Form.Group>\r\n                                { loading && <Loading size={ 50 } /> }\r\n                                <Button variant=\"primary\" type=\"submit\" style={ { marginTop: 10 } }>\r\n                                    Update Event\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"mx-2\"\r\n                                    variant=\"danger\"\r\n                                    onClick={ () => deleteHandler( match.params.id )\r\n                                    }\r\n                                    style={ { marginTop: 10 } }\r\n                                >\r\n                                    Delete Event\r\n                                </Button>\r\n                            </Form>\r\n                        </Col>\r\n                        <Col\r\n                            style={ {\r\n                                display: \"flex\",\r\n                                alignItems: \"center\",\r\n                                justifyContent: \"center\",\r\n                            } }\r\n                        >\r\n                            <img src={ pic } alt={ title } className=\"eventPic\" />\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-muted\">\r\n                    Updated on - { date.substring( 0, 10 ) }\r\n                </Card.Footer>\r\n            </Card>\r\n        </MainScreen>\r\n    );\r\n}\r\n\r\nexport default SingleEvent;;","import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport \"./ProfileScreen.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateProfile } from \"../../actions/userAction\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport ErrorMessage from \"../../components/ErroMessage/ErrorMessage\";\r\n\r\nconst ProfileScreen = ( { location, history } ) => {\r\n    const [ name, setName ] = useState( \"\" );\r\n    const [ email, setEmail ] = useState( \"\" );\r\n    const [ pic, setPic ] = useState();\r\n    const [ password, setPassword ] = useState( \"\" );\r\n    const [ confirmPassword, setConfirmPassword ] = useState( \"\" );\r\n    const [ picMessage, setPicMessage ] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector( ( state ) => state.userLogin );\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdate = useSelector( ( state ) => state.userUpdate );\r\n    const { loading, error, success } = userUpdate;\r\n\r\n    useEffect( () => {\r\n        if ( !userInfo ) {\r\n            history.push( \"/\" );\r\n        } else {\r\n            setName( userInfo.name );\r\n            setEmail( userInfo.email );\r\n            setPic( userInfo.pic );\r\n        }\r\n    }, [ history, userInfo ] );\r\n\r\n    const postDetails = ( pics ) => {\r\n        setPicMessage( null );\r\n        if ( pics.type === \"image/jpeg\" || pics.type === \"image/png\" ) {\r\n            const data = new FormData();\r\n            data.append( \"file\", pics );\r\n            data.append( \"upload_preset\", \"eventx\" );\r\n            data.append( \"cloud_name\", \"dyl8nylbd\" );\r\n            fetch( \"https://api.cloudinary.com/v1_1/dyl8nylbd/image/upload\", {\r\n                method: \"post\",\r\n                body: data,\r\n            } )\r\n                .then( ( res ) => res.json() )\r\n                .then( ( data ) => {\r\n                    setPic( data.url.toString() );\r\n                    console.log( pic );\r\n                } )\r\n                .catch( ( err ) => {\r\n                    console.log( err );\r\n                } );\r\n        } else {\r\n            return setPicMessage( \"Please Select an Image\" );\r\n        }\r\n    };\r\n\r\n    const submitHandler = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( updateProfile( { name, email, password, pic } ) );\r\n    };\r\n\r\n    return (\r\n        <MainScreen title=\"Edit Profile\">\r\n            <div>\r\n                <Row className=\"profileContainer\">\r\n                    <Col md={ 6 }>\r\n                        <Form onSubmit={ submitHandler }>\r\n                            { loading && <Loading /> }\r\n                            { success && (\r\n                                <ErrorMessage variant=\"success\">\r\n                                    Updated Successfully\r\n                                </ErrorMessage>\r\n                            ) }\r\n                            { error && <ErrorMessage variant=\"danger\">{ error }</ErrorMessage> }\r\n                            <Form.Group controlId=\"name\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Name\"\r\n                                    value={ name }\r\n                                    onChange={ ( e ) => setName( e.target.value ) }\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"email\">\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    value={ email }\r\n                                    onChange={ ( e ) => setEmail( e.target.value ) }\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Enter Password\"\r\n                                    value={ password }\r\n                                    onChange={ ( e ) => setPassword( e.target.value ) }\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"confirmPassword\">\r\n                                <Form.Label>Confirm Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    value={ confirmPassword }\r\n                                    onChange={ ( e ) => setConfirmPassword( e.target.value ) }\r\n                                ></Form.Control>\r\n                            </Form.Group>{ \" \" }\r\n                            { picMessage && (\r\n                                <ErrorMessage variant=\"danger\">{ picMessage }</ErrorMessage>\r\n                            ) }\r\n                            <Form.Group controlId=\"pic\">\r\n                                <Form.Label>Change Profile Picture</Form.Label>\r\n                                <Form.File\r\n                                    onChange={ ( e ) => postDetails( e.target.files[ 0 ] ) }\r\n                                    id=\"custom-file\"\r\n                                    type=\"image/png\"\r\n                                    label=\"Upload Profile Picture\"\r\n                                    custom\r\n                                />\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" varient=\"primary\" style={ { marginTop: 10 } }>\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col\r\n                        style={ {\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                        } }\r\n                    >\r\n                        <img src={ pic } alt={ name } className=\"profilePic\" />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </MainScreen>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;","import './App.css';\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Footer from './components/Footer/Footer';\nimport Header from './components/Header/Header';\nimport LandingPage from './screens/LandingPage/LandingPage';\nimport MyEvents from './screens/MyEvents/MyEvents';\nimport LoginScreen from './screens/LoginScreen/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen/RegisterScreen';\nimport CreateEvent from './screens/SingleEvent/CreateEvent';\nimport SingleEvent from './screens/SingleEvent/SingleEvent';\nimport ProfileScreen from './screens/ProfileScreen/ProfileScreen';\n\nfunction App () {\n  const [ search, setSearch ] = useState( \"\" );\n  return (\n    <Router>\n      <Header setSearch={ ( s ) => setSearch( s ) } />\n      <main >\n        <Route exact path='/' component={ LandingPage } />\n        <Route path='/login' component={ LoginScreen } />\n        <Route path='/register' component={ RegisterScreen } />\n        <Route path='/myevents' component={ () => <MyEvents search={ search } /> } />\n        <Route path='/event/:id' component={ SingleEvent } />\n        <Route path='/createevent' component={ CreateEvent } />\n        <Route path=\"/profile\" component={ ProfileScreen } />\n      </main>\n      <Footer />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from './reducers/userReducers';\r\nimport {\r\n    eventCreateReducer,\r\n    eventDeleteReducer,\r\n    eventListReducer,\r\n    eventUpdateReducer,\r\n\r\n} from './reducers/eventReducer';\r\n\r\nconst reducer = combineReducers( {\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    eventList: eventListReducer,\r\n    eventCreate: eventCreateReducer,\r\n    eventDelete: eventDeleteReducer,\r\n    eventUpdate: eventUpdateReducer,\r\n    userUpdate: userUpdateReducer,\r\n} );\r\n\r\nconst userInfoFromStorage = localStorage.getItem( 'userInfo' ) ? JSON.parse( localStorage.getItem( 'userInfo' ) ) : null;\r\n\r\nconst initialState = {\r\n    userLogin: {\r\n        userInfo: userInfoFromStorage\r\n    }\r\n};\r\n\r\nconst middleware = [ thunk ];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools( applyMiddleware( ...middleware ) )\r\n);\r\n\r\nexport default store;\r\n\r\n\r\n","import {\r\n    USER_LOGIN_FAIL,\r\n    USER_LOGIN_REQUEST,\r\n    USER_LOGIN_SUCCESS,\r\n    USER_LOGOUT,\r\n    USER_REGISTER_FAIL,\r\n    USER_REGISTER_REQUEST,\r\n    USER_REGISTER_SUCCESS,\r\n    USER_UPDATE_FAIL,\r\n    USER_UPDATE_REQUEST,\r\n    USER_UPDATE_SUCCESS,\r\n} from './../constants/userConstants';\r\nexport const userLoginReducer = ( state = {}, action ) => {\r\n    switch ( action.type ) {\r\n        case USER_LOGIN_REQUEST:\r\n            return { loading: true };\r\n        case USER_LOGIN_SUCCESS:\r\n            return {\r\n                loading: false,\r\n                userInfo: action.payload\r\n            };\r\n        case USER_LOGIN_FAIL:\r\n            return {\r\n                loading: false,\r\n                error: action.payload\r\n            };\r\n        case USER_LOGOUT:\r\n            return {};\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userRegisterReducer = ( state = {}, action ) => {\r\n    switch ( action.type ) {\r\n        case USER_REGISTER_REQUEST:\r\n            return { loading: true };\r\n        case USER_REGISTER_SUCCESS:\r\n            return { loading: false, userInfo: action.payload };\r\n        case USER_REGISTER_FAIL:\r\n            return { loading: false, error: action.payload };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const userUpdateReducer = ( state = {}, action ) => {\r\n    switch ( action.type ) {\r\n        case USER_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case USER_UPDATE_SUCCESS:\r\n            return { loading: false, userInfo: action.payload, success: true };\r\n        case USER_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload, success: false };\r\n        default:\r\n            return state;\r\n    }\r\n};","import {\r\n    EVENTS_UPDATE_REQUEST,\r\n    EVENTS_UPDATE_SUCCESS,\r\n    EVENTS_UPDATE_FAIL,\r\n    EVENTS_CREATE_FAIL,\r\n    EVENTS_CREATE_REQUEST,\r\n    EVENTS_CREATE_SUCCESS,\r\n    EVENTS_DELETE_FAIL,\r\n    EVENTS_DELETE_REQUEST,\r\n    EVENTS_DELETE_SUCCESS,\r\n    EVENTS_LIST_FAIL,\r\n    EVENTS_LIST_REQUEST,\r\n    EVENTS_LIST_SUCCESS,\r\n} from \"../constants/eventsContants\";\r\n\r\nexport const eventListReducer = ( state = { events: [] }, action ) => {\r\n    switch ( action.type ) {\r\n        case EVENTS_LIST_REQUEST:\r\n            return { loading: true };\r\n        case EVENTS_LIST_SUCCESS:\r\n            return { loading: false, events: action.payload };\r\n        case EVENTS_LIST_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const eventCreateReducer = ( state = {}, action ) => {\r\n    switch ( action.type ) {\r\n        case EVENTS_CREATE_REQUEST:\r\n            return { loading: true };\r\n        case EVENTS_CREATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case EVENTS_CREATE_FAIL:\r\n            return { loading: false, error: action.payload };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const eventDeleteReducer = ( state = {}, action ) => {\r\n    switch ( action.type ) {\r\n        case EVENTS_DELETE_REQUEST:\r\n            return { loading: true };\r\n        case EVENTS_DELETE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case EVENTS_DELETE_FAIL:\r\n            return { loading: false, error: action.payload, success: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const eventUpdateReducer = ( state = {}, action ) => {\r\n    switch ( action.type ) {\r\n        case EVENTS_UPDATE_REQUEST:\r\n            return { loading: true };\r\n        case EVENTS_UPDATE_SUCCESS:\r\n            return { loading: false, success: true };\r\n        case EVENTS_UPDATE_FAIL:\r\n            return { loading: false, error: action.payload, success: false };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './bootstrap.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={ store }>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById( 'root' )\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}