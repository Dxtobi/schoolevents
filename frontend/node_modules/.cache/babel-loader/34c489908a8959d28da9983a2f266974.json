{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from './reducers/userReducers';\nimport { noteCreateReducer, noteDeleteReducer, noteListReducer as eventListReducer, noteUpdateReducer } from './reducers/noteReducer';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  noteList: eventListReducer,\n  noteCreate: noteCreateReducer,\n  noteDelete: noteDeleteReducer,\n  noteUpdate: noteUpdateReducer,\n  userUpdate: userUpdateReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["E:/003_Personal_Portfolio/Experimental/event-manager/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","userUpdateReducer","noteCreateReducer","noteDeleteReducer","noteListReducer","eventListReducer","noteUpdateReducer","reducer","userLogin","userRegister","noteList","noteCreate","noteDelete","noteUpdate","userUpdate","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,iBAAhD,QAAyE,yBAAzE;AACA,SACIC,iBADJ,EAEIC,iBAFJ,EAGIC,eAAe,IAAIC,gBAHvB,EAIIC,iBAJJ,QAMO,wBANP;AAQA,MAAMC,OAAO,GAAGZ,eAAe,CAAE;AAC7Ba,EAAAA,SAAS,EAAET,gBADkB;AAE7BU,EAAAA,YAAY,EAAET,mBAFe;AAG7BU,EAAAA,QAAQ,EAAEL,gBAHmB;AAI7BM,EAAAA,UAAU,EAAET,iBAJiB;AAK7BU,EAAAA,UAAU,EAAET,iBALiB;AAM7BU,EAAAA,UAAU,EAAEP,iBANiB;AAO7BQ,EAAAA,UAAU,EAAEb;AAPiB,CAAF,CAA/B;AAUA,MAAMc,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAsB,UAAtB,IAAqCC,IAAI,CAACC,KAAL,CAAYH,YAAY,CAACC,OAAb,CAAsB,UAAtB,CAAZ,CAArC,GAAwF,IAApH;AAEA,MAAMG,YAAY,GAAG;AACjBZ,EAAAA,SAAS,EAAE;AACPa,IAAAA,QAAQ,EAAEN;AADH;AADM,CAArB;AAMA,MAAMO,UAAU,GAAG,CAAEzB,KAAF,CAAnB;AAEA,MAAM0B,KAAK,GAAG7B,WAAW,CACrBa,OADqB,EAErBa,YAFqB,EAGrBtB,mBAAmB,CAAEF,eAAe,CAAE,GAAG0B,UAAL,CAAjB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from './reducers/userReducers';\r\nimport {\r\n    noteCreateReducer,\r\n    noteDeleteReducer,\r\n    noteListReducer as eventListReducer,\r\n    noteUpdateReducer,\r\n\r\n} from './reducers/noteReducer';\r\n\r\nconst reducer = combineReducers( {\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    noteList: eventListReducer,\r\n    noteCreate: noteCreateReducer,\r\n    noteDelete: noteDeleteReducer,\r\n    noteUpdate: noteUpdateReducer,\r\n    userUpdate: userUpdateReducer,\r\n} );\r\n\r\nconst userInfoFromStorage = localStorage.getItem( 'userInfo' ) ? JSON.parse( localStorage.getItem( 'userInfo' ) ) : null;\r\n\r\nconst initialState = {\r\n    userLogin: {\r\n        userInfo: userInfoFromStorage\r\n    }\r\n};\r\n\r\nconst middleware = [ thunk ];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools( applyMiddleware( ...middleware ) )\r\n);\r\n\r\nexport default store;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}