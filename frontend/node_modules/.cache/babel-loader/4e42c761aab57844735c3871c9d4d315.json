{"ast":null,"code":"var _jsxFileName = \"E:\\\\003_Personal_Portfolio\\\\Experimental\\\\event-manager\\\\frontend\\\\src\\\\screens\\\\ProfileScreen\\\\ProfileScreen.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\nimport MainScreen from \"../../components/MainScreen\";\nimport \"./ProfileScreen.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateProfile } from \"../../actions/userAction\";\nimport Loading from \"../../components/Loading/Loading\";\nimport ErrorMessage from \"../../components/ErroMessage/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileScreen = ({\n  location,\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [pic, setPic] = useState();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [picMessage, setPicMessage] = useState();\n  const dispatch = useDispatch();\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userUpdate = useSelector(state => state.userUpdate);\n  const {\n    loading,\n    error,\n    success\n  } = userUpdate;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push(\"/\");\n    } else {\n      setName(userInfo.name);\n      setEmail(userInfo.email);\n      setPic(userInfo.pic);\n    }\n  }, [history, userInfo]);\n\n  const postDetails = pics => {\n    setPicMessage(null);\n\n    if (pics.type === \"image/jpeg\" || pics.type === \"image/png\") {\n      const data = new FormData();\n      data.append(\"file\", pics);\n      data.append(\"upload_preset\", \"evenx\");\n      data.append(\"cloud_name\", \"dyl8nylbd\");\n      fetch(\"https://api.cloudinary.com/v1_1/dyl8nylbd/image/upload\", {\n        method: \"post\",\n        body: data\n      }).then(res => res.json()).then(data => {\n        setPic(data.url.toString());\n        console.log(pic);\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      return setPicMessage(\"Please Select an Image\");\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProfile({\n      name,\n      email,\n      password,\n      pic\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"EDIT PROFILE\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"profileContainer\",\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: submitHandler,\n            children: [loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 42\n            }, this), success && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              variant: \"success\",\n              children: \"Updated Successfully\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 33\n            }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 40\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"name\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter Name\",\n                value: name,\n                onChange: e => setName(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"email\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Email Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"email\",\n                placeholder: \"Enter Email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"password\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Enter Password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"confirmPassword\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Confirm Password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"password\",\n                placeholder: \"Confirm Password\",\n                value: confirmPassword,\n                onChange: e => setConfirmPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), \" \", picMessage && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              variant: \"danger\",\n              children: picMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"pic\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Change Profile Picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n                onChange: e => postDetails(e.target.files[0]),\n                id: \"custom-file\",\n                type: \"image/png\",\n                label: \"Upload Profile Picture\",\n                custom: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              varient: \"primary\",\n              children: \"Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          style: {\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: pic,\n            alt: name,\n            className: \"profilePic\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ProfileScreen, \"Af+YhP7JwLui79cDNNGe9AoNUWA=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProfileScreen;\nexport default ProfileScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileScreen\");","map":{"version":3,"sources":["E:/003_Personal_Portfolio/Experimental/event-manager/frontend/src/screens/ProfileScreen/ProfileScreen.jsx"],"names":["React","useState","useEffect","Form","Button","Row","Col","MainScreen","useDispatch","useSelector","updateProfile","Loading","ErrorMessage","ProfileScreen","location","history","name","setName","email","setEmail","pic","setPic","password","setPassword","confirmPassword","setConfirmPassword","picMessage","setPicMessage","dispatch","userLogin","state","userInfo","userUpdate","loading","error","success","push","postDetails","pics","type","data","FormData","append","fetch","method","body","then","res","json","url","toString","console","log","catch","err","submitHandler","e","preventDefault","target","value","files","display","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Form, Button, Row, Col } from \"react-bootstrap\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport \"./ProfileScreen.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { updateProfile } from \"../../actions/userAction\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport ErrorMessage from \"../../components/ErroMessage/ErrorMessage\";\r\n\r\nconst ProfileScreen = ( { location, history } ) => {\r\n    const [ name, setName ] = useState( \"\" );\r\n    const [ email, setEmail ] = useState( \"\" );\r\n    const [ pic, setPic ] = useState();\r\n    const [ password, setPassword ] = useState( \"\" );\r\n    const [ confirmPassword, setConfirmPassword ] = useState( \"\" );\r\n    const [ picMessage, setPicMessage ] = useState();\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector( ( state ) => state.userLogin );\r\n    const { userInfo } = userLogin;\r\n\r\n    const userUpdate = useSelector( ( state ) => state.userUpdate );\r\n    const { loading, error, success } = userUpdate;\r\n\r\n    useEffect( () => {\r\n        if ( !userInfo ) {\r\n            history.push( \"/\" );\r\n        } else {\r\n            setName( userInfo.name );\r\n            setEmail( userInfo.email );\r\n            setPic( userInfo.pic );\r\n        }\r\n    }, [ history, userInfo ] );\r\n\r\n    const postDetails = ( pics ) => {\r\n        setPicMessage( null );\r\n        if ( pics.type === \"image/jpeg\" || pics.type === \"image/png\" ) {\r\n            const data = new FormData();\r\n            data.append( \"file\", pics );\r\n            data.append( \"upload_preset\", \"evenx\" );\r\n            data.append( \"cloud_name\", \"dyl8nylbd\" );\r\n            fetch( \"https://api.cloudinary.com/v1_1/dyl8nylbd/image/upload\", {\r\n                method: \"post\",\r\n                body: data,\r\n            } )\r\n                .then( ( res ) => res.json() )\r\n                .then( ( data ) => {\r\n                    setPic( data.url.toString() );\r\n                    console.log( pic );\r\n                } )\r\n                .catch( ( err ) => {\r\n                    console.log( err );\r\n                } );\r\n        } else {\r\n            return setPicMessage( \"Please Select an Image\" );\r\n        }\r\n    };\r\n\r\n    const submitHandler = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        dispatch( updateProfile( { name, email, password, pic } ) );\r\n    };\r\n\r\n    return (\r\n        <MainScreen title=\"EDIT PROFILE\">\r\n            <div>\r\n                <Row className=\"profileContainer\">\r\n                    <Col md={ 6 }>\r\n                        <Form onSubmit={ submitHandler }>\r\n                            { loading && <Loading /> }\r\n                            { success && (\r\n                                <ErrorMessage variant=\"success\">\r\n                                    Updated Successfully\r\n                                </ErrorMessage>\r\n                            ) }\r\n                            { error && <ErrorMessage variant=\"danger\">{ error }</ErrorMessage> }\r\n                            <Form.Group controlId=\"name\">\r\n                                <Form.Label>Name</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"text\"\r\n                                    placeholder=\"Enter Name\"\r\n                                    value={ name }\r\n                                    onChange={ ( e ) => setName( e.target.value ) }\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"email\">\r\n                                <Form.Label>Email Address</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"email\"\r\n                                    placeholder=\"Enter Email\"\r\n                                    value={ email }\r\n                                    onChange={ ( e ) => setEmail( e.target.value ) }\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"password\">\r\n                                <Form.Label>Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Enter Password\"\r\n                                    value={ password }\r\n                                    onChange={ ( e ) => setPassword( e.target.value ) }\r\n                                ></Form.Control>\r\n                            </Form.Group>\r\n                            <Form.Group controlId=\"confirmPassword\">\r\n                                <Form.Label>Confirm Password</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"password\"\r\n                                    placeholder=\"Confirm Password\"\r\n                                    value={ confirmPassword }\r\n                                    onChange={ ( e ) => setConfirmPassword( e.target.value ) }\r\n                                ></Form.Control>\r\n                            </Form.Group>{ \" \" }\r\n                            { picMessage && (\r\n                                <ErrorMessage variant=\"danger\">{ picMessage }</ErrorMessage>\r\n                            ) }\r\n                            <Form.Group controlId=\"pic\">\r\n                                <Form.Label>Change Profile Picture</Form.Label>\r\n                                <Form.File\r\n                                    onChange={ ( e ) => postDetails( e.target.files[ 0 ] ) }\r\n                                    id=\"custom-file\"\r\n                                    type=\"image/png\"\r\n                                    label=\"Upload Profile Picture\"\r\n                                    custom\r\n                                />\r\n                            </Form.Group>\r\n                            <Button type=\"submit\" varient=\"primary\">\r\n                                Update\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col\r\n                        style={ {\r\n                            display: \"flex\",\r\n                            alignItems: \"center\",\r\n                            justifyContent: \"center\",\r\n                        } }\r\n                    >\r\n                        <img src={ pic } alt={ name } className=\"profilePic\" />\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        </MainScreen>\r\n    );\r\n};\r\n\r\nexport default ProfileScreen;"]},"metadata":{},"sourceType":"module"}