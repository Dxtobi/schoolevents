{"ast":null,"code":"var _jsxFileName = \"E:\\\\003_Personal_Portfolio\\\\Experimental\\\\event-manager\\\\frontend\\\\src\\\\screens\\\\MyNotes\\\\MyNotes.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport MainScreen from '../../components/MainScreen';\nimport { Link } from 'react-router-dom';\nimport { Accordion, Badge, Button, Card } from 'react-bootstrap';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteNoteAction, listNotes } from \"../../actions/notesAction\";\nimport Loading from \"../../components/Loading/Loading\";\nimport ErrorMessage from \"../../components/ErroMessage/ErrorMessage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyNotes = ({\n  history,\n  search\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const noteList = useSelector(state => state.noteList);\n  const {\n    loading,\n    error,\n    notes\n  } = noteList; // const filteredNotes = notes.filter((note) =>\n  //   note.title.toLowerCase().includes(search.toLowerCase())\n  // );\n\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const noteDelete = useSelector(state => state.noteDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete\n  } = noteDelete;\n  const noteCreate = useSelector(state => state.noteCreate);\n  const {\n    success: successCreate\n  } = noteCreate;\n  const noteUpdate = useSelector(state => state.noteUpdate);\n  const {\n    success: successUpdate\n  } = noteUpdate;\n  useEffect(() => {\n    dispatch(listNotes());\n\n    if (!userInfo) {\n      history.push(\"/\");\n    }\n  }, [dispatch, history, userInfo, successDelete, successCreate, successUpdate]);\n\n  const deleteHandler = id => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteNoteAction(id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: `Welcome back ${userInfo.name}.`,\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/createnote\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        styles: {\n          marginLeft: 10,\n          marginBottom: 6\n        },\n        size: \"lg\",\n        children: \"Create New Note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      variant: \"danger\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 24\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 26\n    }, this), notes && notes.filter(filteredNote => filteredNote.title.toLowerCase().includes(search.toLowerCase())).reverse().map(note => {\n      return /*#__PURE__*/_jsxDEV(Accordion, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          style: {\n            margin: 10\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n            style: {\n              display: 'flex'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              style: {\n                color: 'black',\n                textDecoration: 'none',\n                flex: 1,\n                cursor: 'pointer',\n                alignSelf: 'center',\n                fontSize: 18\n              },\n              children: /*#__PURE__*/_jsxDEV(Accordion.Toggle, {\n                as: Link,\n                variant: \"link\",\n                eventKey: \"0\",\n                children: note.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                href: `/note/${note._id}`,\n                children: \"Edit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"mx-2\",\n                variant: \"danger\",\n                onClick: () => deleteHandler(note._id),\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion.Collapse, {\n            eventKey: \"0\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: /*#__PURE__*/_jsxDEV(Badge, {\n                  variant: \"success\",\n                  children: [\"Category - \", note.category]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"blockquote\", {\n                className: \"blockquote mb-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: note.content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n                  className: \"blockquote-footer\",\n                  children: [\"Created on\", \" \", /*#__PURE__*/_jsxDEV(\"cite\", {\n                    title: \"Source Title\",\n                    children: note.createdAt.substring(0, 10)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, note._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 24\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyNotes, \"0+T1O8sXS5MYgAhGr/zGeOdS5aI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = MyNotes;\nexport default MyNotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyNotes\");","map":{"version":3,"sources":["E:/003_Personal_Portfolio/Experimental/event-manager/frontend/src/screens/MyNotes/MyNotes.jsx"],"names":["React","useEffect","MainScreen","Link","Accordion","Badge","Button","Card","useDispatch","useSelector","deleteNoteAction","listNotes","Loading","ErrorMessage","MyNotes","history","search","dispatch","noteList","state","loading","error","notes","userLogin","userInfo","noteDelete","loadingDelete","errorDelete","success","successDelete","noteCreate","successCreate","noteUpdate","successUpdate","push","deleteHandler","id","window","confirm","name","marginLeft","marginBottom","filter","filteredNote","title","toLowerCase","includes","reverse","map","note","margin","display","color","textDecoration","flex","cursor","alignSelf","fontSize","_id","category","content","createdAt","substring"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport MainScreen from '../../components/MainScreen';\r\nimport { Link } from 'react-router-dom';\r\nimport { Accordion, Badge, Button, Card } from 'react-bootstrap';\r\n\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteNoteAction, listNotes } from \"../../actions/notesAction\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport ErrorMessage from \"../../components/ErroMessage/ErrorMessage\";\r\n\r\n\r\nconst MyNotes = ( { history, search } ) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const noteList = useSelector( ( state ) => state.noteList );\r\n    const { loading, error, notes } = noteList;\r\n\r\n    // const filteredNotes = notes.filter((note) =>\r\n    //   note.title.toLowerCase().includes(search.toLowerCase())\r\n    // );\r\n\r\n    const userLogin = useSelector( ( state ) => state.userLogin );\r\n    const { userInfo } = userLogin;\r\n\r\n    const noteDelete = useSelector( ( state ) => state.noteDelete );\r\n    const {\r\n        loading: loadingDelete,\r\n        error: errorDelete,\r\n        success: successDelete,\r\n    } = noteDelete;\r\n\r\n    const noteCreate = useSelector( ( state ) => state.noteCreate );\r\n    const { success: successCreate } = noteCreate;\r\n\r\n    const noteUpdate = useSelector( ( state ) => state.noteUpdate );\r\n    const { success: successUpdate } = noteUpdate;\r\n\r\n    useEffect( () => {\r\n        dispatch( listNotes() );\r\n        if ( !userInfo ) {\r\n            history.push( \"/\" );\r\n        }\r\n    }, [\r\n        dispatch,\r\n        history,\r\n        userInfo,\r\n        successDelete,\r\n        successCreate,\r\n        successUpdate,\r\n    ] );\r\n\r\n    const deleteHandler = ( id ) => {\r\n        if ( window.confirm( \"Are you sure?\" ) ) {\r\n            dispatch( deleteNoteAction( id ) );\r\n        }\r\n    };\r\n    return (\r\n        <MainScreen title={ `Welcome back ${ userInfo.name }.` }>\r\n            <Link to='/createnote'>\r\n                <Button\r\n                    styles={ { marginLeft: 10, marginBottom: 6 } }\r\n                    size='lg'\r\n                >\r\n                    Create New Note\r\n                </Button>\r\n            </Link>\r\n            { error && <ErrorMessage variant='danger' /> }\r\n            { loading && <Loading /> }\r\n            { notes && notes.filter( ( filteredNote ) =>\r\n                filteredNote.title.toLowerCase().includes( search.toLowerCase() )\r\n            ).reverse().map( ( note ) => {\r\n                return <Accordion key={ note._id }>\r\n                    <Card style={ { margin: 10 } }>\r\n                        <Card.Header style={ { display: 'flex' } }>\r\n                            <span style={ {\r\n                                color: 'black',\r\n                                textDecoration: 'none',\r\n                                flex: 1,\r\n                                cursor: 'pointer',\r\n                                alignSelf: 'center',\r\n                                fontSize: 18,\r\n\r\n                            } }\r\n                            >\r\n                                <Accordion.Toggle\r\n                                    as={ Link }\r\n                                    variant='link'\r\n                                    eventKey='0'\r\n                                >\r\n                                    { note.title }\r\n                                </Accordion.Toggle>\r\n                            </span>\r\n                            <div>\r\n                                <Button\r\n                                    href={ `/note/${ note._id }` }\r\n                                >\r\n                                    Edit\r\n                                </Button>\r\n                                <Button\r\n                                    className='mx-2'\r\n                                    variant='danger'\r\n                                    onClick={ () => deleteHandler( note._id ) }\r\n                                >\r\n                                    Delete</Button>\r\n                            </div>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey='0'>\r\n                            <Card.Body>\r\n                                <h4>\r\n                                    <Badge variant='success'>Category - { note.category }</Badge>\r\n                                </h4>\r\n                                <blockquote className=\"blockquote mb-0\">\r\n                                    <p>\r\n                                        { note.content }\r\n                                    </p>\r\n                                    <footer className=\"blockquote-footer\">\r\n                                        Created on{ \" \" }\r\n                                        <cite title=\"Source Title\">\r\n                                            { note.createdAt.substring( 0, 10 ) }\r\n                                        </cite>\r\n                                    </footer>\r\n                                </blockquote>\r\n                            </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                </Accordion>;\r\n            } ) }\r\n        </MainScreen >\r\n    );\r\n};\r\n\r\nexport default MyNotes;\r\n"]},"metadata":{},"sourceType":"module"}