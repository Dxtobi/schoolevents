{"ast":null,"code":"var _jsxFileName = \"E:\\\\003_Personal_Portfolio\\\\Experimental\\\\event-manager\\\\frontend\\\\src\\\\screens\\\\SingleEvent\\\\SingleEvent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport axios from \"axios\";\nimport { Button, Card, Form, Row } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { deleteEventAction, updateEventAction } from \"../../actions/eventsAction\";\nimport ErrorMessage from \"../../components/ErroMessage/ErrorMessage\";\nimport Loading from \"../../components/Loading/Loading\";\nimport ReactMarkdown from \"react-markdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SingleEvent({\n  match,\n  history\n}) {\n  _s();\n\n  const [title, setTitle] = useState();\n  const [content, setContent] = useState();\n  const [category, setCategory] = useState();\n  const [date, setDate] = useState(\"\");\n  const dispatch = useDispatch();\n  const eventUpdate = useSelector(state => state.eventUpdate);\n  const {\n    loading,\n    error\n  } = eventUpdate;\n  const eventDelete = useSelector(state => state.eventDelete);\n  const {\n    loading: loadingDelete,\n    error: errorDelete\n  } = eventDelete;\n\n  const deleteHandler = id => {\n    if (window.confirm(\"Are you sure?\")) {\n      dispatch(deleteEventAction(id));\n    }\n\n    history.push(\"/myevents\");\n  };\n\n  useEffect(() => {\n    const fetching = async () => {\n      const {\n        data\n      } = await axios.get(`/api/events/${match.params.id}`);\n      setTitle(data.title);\n      setContent(data.content);\n      setCategory(data.category);\n      setDate(data.updatedAt);\n    };\n\n    fetching();\n  }, [match.params.id, date]);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const updateHandler = e => {\n    e.preventDefault();\n    dispatch(updateEventAction(match.params.id, title, content, category));\n    if (!title || !content || !category) return;\n    resetHandler();\n    history.push(\"/myevents\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"Edit Event\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Edit your Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          className: \"profileContainer\",\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              onSubmit: updateHandler,\n              children: [loadingDelete && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 52\n              }, this), error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                variant: \"danger\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 44\n              }, this), errorDelete && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                variant: \"danger\",\n                children: errorDelete\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"title\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Title\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"title\",\n                  placeholder: \"Enter the title\",\n                  value: title,\n                  onChange: e => setTitle(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"content\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Content\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"textarea\",\n                  placeholder: \"Enter the content\",\n                  rows: 4,\n                  value: content,\n                  onChange: e => setContent(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 85,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this), content && /*#__PURE__*/_jsxDEV(Card, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                  children: \"Event Preview\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                  children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                    children: content\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 97,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"content\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"content\",\n                  placeholder: \"Enter the Category\",\n                  value: category,\n                  onChange: e => setCategory(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 33\n              }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {\n                size: 50\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 46\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"primary\",\n                type: \"submit\",\n                style: {\n                  marginTop: 10\n                },\n                children: \"Update Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                className: \"mx-2\",\n                variant: \"danger\",\n                onClick: () => deleteHandler(match.params.id),\n                style: {\n                  marginTop: 10\n                },\n                children: \"Delete Event\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        className: \"text-muted\",\n        children: [\"Updated on - \", date.substring(0, 10)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SingleEvent, \"j7I62p6tH2SbS4SYb71A7mRj9/E=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = SingleEvent;\nexport default SingleEvent;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleEvent\");","map":{"version":3,"sources":["E:/003_Personal_Portfolio/Experimental/event-manager/frontend/src/screens/SingleEvent/SingleEvent.jsx"],"names":["React","useEffect","useState","MainScreen","axios","Button","Card","Form","Row","useDispatch","useSelector","deleteEventAction","updateEventAction","ErrorMessage","Loading","ReactMarkdown","SingleEvent","match","history","title","setTitle","content","setContent","category","setCategory","date","setDate","dispatch","eventUpdate","state","loading","error","eventDelete","loadingDelete","errorDelete","deleteHandler","id","window","confirm","push","fetching","data","get","params","updatedAt","resetHandler","updateHandler","e","preventDefault","target","value","marginTop","substring"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport axios from \"axios\";\r\nimport { Button, Card, Form, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { deleteEventAction, updateEventAction } from \"../../actions/eventsAction\";\r\nimport ErrorMessage from \"../../components/ErroMessage/ErrorMessage\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nfunction SingleEvent ( { match, history } ) {\r\n    const [ title, setTitle ] = useState();\r\n    const [ content, setContent ] = useState();\r\n    const [ category, setCategory ] = useState();\r\n    const [ date, setDate ] = useState( \"\" );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const eventUpdate = useSelector( ( state ) => state.eventUpdate );\r\n    const { loading, error } = eventUpdate;\r\n\r\n    const eventDelete = useSelector( ( state ) => state.eventDelete );\r\n    const { loading: loadingDelete, error: errorDelete } = eventDelete;\r\n\r\n    const deleteHandler = ( id ) => {\r\n        if ( window.confirm( \"Are you sure?\" ) ) {\r\n            dispatch( deleteEventAction( id ) );\r\n        }\r\n        history.push( \"/myevents\" );\r\n    };\r\n\r\n    useEffect( () => {\r\n        const fetching = async () => {\r\n            const { data } = await axios.get( `/api/events/${ match.params.id }` );\r\n\r\n            setTitle( data.title );\r\n            setContent( data.content );\r\n            setCategory( data.category );\r\n            setDate( data.updatedAt );\r\n        };\r\n\r\n        fetching();\r\n    }, [ match.params.id, date ] );\r\n\r\n    const resetHandler = () => {\r\n        setTitle( \"\" );\r\n        setCategory( \"\" );\r\n        setContent( \"\" );\r\n    };\r\n\r\n    const updateHandler = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( updateEventAction( match.params.id, title, content, category ) );\r\n        if ( !title || !content || !category ) return;\r\n\r\n        resetHandler();\r\n        history.push( \"/myevents\" );\r\n    };\r\n\r\n    return (\r\n        <MainScreen title=\"Edit Event\">\r\n            <Card>\r\n                <Card.Header>Edit your Event</Card.Header>\r\n                <Card.Body>\r\n                    <Row className=\"profileContainer\">\r\n                        <Col md={ 6 }>\r\n                            <Form onSubmit={ updateHandler }>\r\n                                { loadingDelete && <Loading /> }\r\n                                { error && <ErrorMessage variant=\"danger\">{ error }</ErrorMessage> }\r\n                                { errorDelete && (\r\n                                    <ErrorMessage variant=\"danger\">{ errorDelete }</ErrorMessage>\r\n                                ) }\r\n                                <Form.Group controlId=\"title\">\r\n                                    <Form.Label>Title</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"title\"\r\n                                        placeholder=\"Enter the title\"\r\n                                        value={ title }\r\n                                        onChange={ ( e ) => setTitle( e.target.value ) }\r\n                                    />\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"content\">\r\n                                    <Form.Label>Content</Form.Label>\r\n                                    <Form.Control\r\n                                        as=\"textarea\"\r\n                                        placeholder=\"Enter the content\"\r\n                                        rows={ 4 }\r\n                                        value={ content }\r\n                                        onChange={ ( e ) => setContent( e.target.value ) }\r\n                                    />\r\n                                </Form.Group>\r\n                                { content && (\r\n                                    <Card>\r\n                                        <Card.Header>Event Preview</Card.Header>\r\n                                        <Card.Body>\r\n                                            <ReactMarkdown>{ content }</ReactMarkdown>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                ) }\r\n\r\n                                <Form.Group controlId=\"content\">\r\n                                    <Form.Label>Category</Form.Label>\r\n                                    <Form.Control\r\n                                        type=\"content\"\r\n                                        placeholder=\"Enter the Category\"\r\n                                        value={ category }\r\n                                        onChange={ ( e ) => setCategory( e.target.value ) }\r\n                                    />\r\n                                </Form.Group>\r\n                                { loading && <Loading size={ 50 } /> }\r\n                                <Button variant=\"primary\" type=\"submit\" style={ { marginTop: 10 } }>\r\n                                    Update Event\r\n                                </Button>\r\n                                <Button\r\n                                    className=\"mx-2\"\r\n                                    variant=\"danger\"\r\n                                    onClick={ () => deleteHandler( match.params.id )\r\n                                    }\r\n                                    style={ { marginTop: 10 } }\r\n                                >\r\n                                    Delete Event\r\n                                </Button>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                </Card.Body>\r\n\r\n\r\n                <Card.Footer className=\"text-muted\">\r\n                    Updated on - { date.substring( 0, 10 ) }\r\n                </Card.Footer>\r\n            </Card>\r\n        </MainScreen>\r\n    );\r\n}\r\n\r\nexport default SingleEvent;;"]},"metadata":{},"sourceType":"module"}