{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from './reducers/userReducers';\nimport { eventCreateReducer, eventDeleteReducer, eventListReducer, eventUpdateReducer } from './reducers/eventReducer';\nconst reducer = combineReducers({\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  eventList: eventListReducer,\n  eventCreate: eventCreateReducer,\n  eventDelete: eventDeleteReducer,\n  eventUpdate: eventUpdateReducer,\n  userUpdate: userUpdateReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst initialState = {\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["E:/003_Personal_Portfolio/Experimental/event-manager/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","userLoginReducer","userRegisterReducer","userUpdateReducer","eventCreateReducer","eventDeleteReducer","eventListReducer","eventUpdateReducer","reducer","userLogin","userRegister","eventList","eventCreate","eventDelete","eventUpdate","userUpdate","userInfoFromStorage","localStorage","getItem","JSON","parse","initialState","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,gBAAT,EAA2BC,mBAA3B,EAAgDC,iBAAhD,QAAyE,yBAAzE;AACA,SACIC,kBADJ,EAEIC,kBAFJ,EAGIC,gBAHJ,EAIIC,kBAJJ,QAMO,yBANP;AAQA,MAAMC,OAAO,GAAGX,eAAe,CAAE;AAC7BY,EAAAA,SAAS,EAAER,gBADkB;AAE7BS,EAAAA,YAAY,EAAER,mBAFe;AAG7BS,EAAAA,SAAS,EAAEL,gBAHkB;AAI7BM,EAAAA,WAAW,EAAER,kBAJgB;AAK7BS,EAAAA,WAAW,EAAER,kBALgB;AAM7BS,EAAAA,WAAW,EAAEP,kBANgB;AAO7BQ,EAAAA,UAAU,EAAEZ;AAPiB,CAAF,CAA/B;AAUA,MAAMa,mBAAmB,GAAGC,YAAY,CAACC,OAAb,CAAsB,UAAtB,IAAqCC,IAAI,CAACC,KAAL,CAAYH,YAAY,CAACC,OAAb,CAAsB,UAAtB,CAAZ,CAArC,GAAwF,IAApH;AAEA,MAAMG,YAAY,GAAG;AACjBZ,EAAAA,SAAS,EAAE;AACPa,IAAAA,QAAQ,EAAEN;AADH;AADM,CAArB;AAMA,MAAMO,UAAU,GAAG,CAAExB,KAAF,CAAnB;AAEA,MAAMyB,KAAK,GAAG5B,WAAW,CACrBY,OADqB,EAErBa,YAFqB,EAGrBrB,mBAAmB,CAAEF,eAAe,CAAE,GAAGyB,UAAL,CAAjB,CAHE,CAAzB;AAMA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { userLoginReducer, userRegisterReducer, userUpdateReducer } from './reducers/userReducers';\r\nimport {\r\n    eventCreateReducer,\r\n    eventDeleteReducer,\r\n    eventListReducer,\r\n    eventUpdateReducer,\r\n\r\n} from './reducers/eventReducer';\r\n\r\nconst reducer = combineReducers( {\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    eventList: eventListReducer,\r\n    eventCreate: eventCreateReducer,\r\n    eventDelete: eventDeleteReducer,\r\n    eventUpdate: eventUpdateReducer,\r\n    userUpdate: userUpdateReducer,\r\n} );\r\n\r\nconst userInfoFromStorage = localStorage.getItem( 'userInfo' ) ? JSON.parse( localStorage.getItem( 'userInfo' ) ) : null;\r\n\r\nconst initialState = {\r\n    userLogin: {\r\n        userInfo: userInfoFromStorage\r\n    }\r\n};\r\n\r\nconst middleware = [ thunk ];\r\n\r\nconst store = createStore(\r\n    reducer,\r\n    initialState,\r\n    composeWithDevTools( applyMiddleware( ...middleware ) )\r\n);\r\n\r\nexport default store;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}