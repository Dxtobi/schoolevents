{"ast":null,"code":"var _jsxFileName = \"E:\\\\003_Personal_Portfolio\\\\Experimental\\\\event-manager\\\\frontend\\\\src\\\\screens\\\\SingleEvent\\\\CreateEvent.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport MainScreen from \"../../components/MainScreen\";\nimport { Button, Card, Form } from \"react-bootstrap\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createEventAction } from \"../../actions/eventsAction\";\nimport Loading from \"../../components/Loading/Loading\";\nimport ErrorMessage from \"../../components/ErroMessage/ErrorMessage\";\nimport ReactMarkdown from \"react-markdown\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateEvent({\n  history\n}) {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [pic, setPic] = useState(\"https://res.cloudinary.com/practicaldev/image/fetch/s--P-zvMTgt--/c_imagga_scale,f_auto,fl_progressive,h_900,q_auto,w_1600/https://dev-to-uploads.s3.amazonaws.com/i/qyix6eyhrnc8x9c44yp2.jpg\");\n  const [picMessage, setPicMessage] = useState(null);\n  const dispatch = useDispatch();\n  const eventCreate = useSelector(state => state.eventCreate);\n  const {\n    loading,\n    error,\n    event\n  } = eventCreate;\n  console.log(event);\n  console.log(pic);\n\n  const resetHandler = () => {\n    setTitle(\"\");\n    setCategory(\"\");\n    setContent(\"\");\n  };\n\n  const postDetails = pics => {\n    if (!pics) {\n      return setPicMessage('Please select an image');\n    }\n\n    setPicMessage(null);\n\n    if (pics.type === 'image/jpeg' || pics.type === 'image/png') {\n      const data = new FormData();\n      data.append('file', pics);\n      data.append('upload_preset', 'eventx');\n      data.append('cloud_name', 'dyl8nylbd');\n      fetch('https://api.cloudinary.com/v1_1/dyl8nylbd/image/upload', {\n        method: 'post',\n        body: data\n      }).then(res => res.json()).then(data => {\n        console.log(data);\n        setPic(data.url.toString());\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      return setPicMessage('Please select an image');\n    }\n  };\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(createEventAction(title, content, category, pic));\n    if (!title || !content || !category) return;\n    resetHandler();\n    history.push(\"/myevents\");\n  };\n\n  useEffect(() => {}, []);\n  return /*#__PURE__*/_jsxDEV(MainScreen, {\n    title: \"Create an Event\",\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n        children: \"Create a new Event\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 6,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: submitHandler,\n            children: [error && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              variant: \"danger\",\n              children: error\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 40\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"title\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"title\",\n                value: title,\n                placeholder: \"Enter the title\",\n                onChange: e => setTitle(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"content\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Content\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"textarea\",\n                value: content,\n                placeholder: \"Enter the content\",\n                rows: 4,\n                onChange: e => setContent(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 29\n            }, this), content && /*#__PURE__*/_jsxDEV(Card, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: \"Event Preview\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(ReactMarkdown, {\n                  children: content\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"content\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"content\",\n                value: category,\n                placeholder: \"Enter the Category\",\n                onChange: e => setCategory(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this), picMessage && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              variant: \"danger\",\n              children: picMessage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"pic\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Event Picture\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n                onChange: e => postDetails(e.target.files[0]),\n                id: \"custom-file\",\n                type: \"image/png\",\n                label: \"Upload Event Picture\",\n                custom: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), loading && /*#__PURE__*/_jsxDEV(Loading, {\n              size: 50\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 42\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"primary\",\n              style: {\n                marginTop: 10\n              },\n              children: \"Create Event\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"mx-2\",\n              onClick: resetHandler,\n              variant: \"danger\",\n              style: {\n                marginTop: 10\n              },\n              children: \"Reset Fields\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n        className: \"text-muted\",\n        children: [\"Creating on - \", new Date().toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateEvent, \"YHWwSYyVUAk/buT+x5GF3Le9ySc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CreateEvent;\nexport default CreateEvent;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEvent\");","map":{"version":3,"sources":["E:/003_Personal_Portfolio/Experimental/event-manager/frontend/src/screens/SingleEvent/CreateEvent.jsx"],"names":["React","useEffect","useState","MainScreen","Button","Card","Form","useDispatch","useSelector","createEventAction","Loading","ErrorMessage","ReactMarkdown","CreateEvent","history","title","setTitle","content","setContent","category","setCategory","pic","setPic","picMessage","setPicMessage","dispatch","eventCreate","state","loading","error","event","console","log","resetHandler","postDetails","pics","type","data","FormData","append","fetch","method","body","then","res","json","url","toString","catch","err","submitHandler","e","preventDefault","push","target","value","files","marginTop","Date","toLocaleDateString"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport MainScreen from \"../../components/MainScreen\";\r\nimport { Button, Card, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { createEventAction } from \"../../actions/eventsAction\";\r\nimport Loading from \"../../components/Loading/Loading\";\r\nimport ErrorMessage from \"../../components/ErroMessage/ErrorMessage\";\r\nimport ReactMarkdown from \"react-markdown\";\r\n\r\nfunction CreateEvent ( { history } ) {\r\n    const [ title, setTitle ] = useState( \"\" );\r\n    const [ content, setContent ] = useState( \"\" );\r\n    const [ category, setCategory ] = useState( \"\" );\r\n    const [ pic, setPic ] = useState(\r\n        \"https://res.cloudinary.com/practicaldev/image/fetch/s--P-zvMTgt--/c_imagga_scale,f_auto,fl_progressive,h_900,q_auto,w_1600/https://dev-to-uploads.s3.amazonaws.com/i/qyix6eyhrnc8x9c44yp2.jpg\"\r\n    );\r\n    const [ picMessage, setPicMessage ] = useState( null );\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const eventCreate = useSelector( ( state ) => state.eventCreate );\r\n    const { loading, error, event } = eventCreate;\r\n\r\n    console.log( event );\r\n    console.log( pic );\r\n\r\n    const resetHandler = () => {\r\n        setTitle( \"\" );\r\n        setCategory( \"\" );\r\n        setContent( \"\" );\r\n    };\r\n\r\n\r\n\r\n    const postDetails = ( pics ) => {\r\n        if ( !pics ) {\r\n            return setPicMessage( 'Please select an image' );\r\n        }\r\n        setPicMessage( null );\r\n\r\n        if ( pics.type === 'image/jpeg' || pics.type === 'image/png' ) {\r\n            const data = new FormData();\r\n            data.append( 'file', pics );\r\n            data.append( 'upload_preset', 'eventx' );\r\n            data.append( 'cloud_name', 'dyl8nylbd' );\r\n            fetch( 'https://api.cloudinary.com/v1_1/dyl8nylbd/image/upload', {\r\n                method: 'post',\r\n                body: data\r\n            } ).then( ( res ) => res.json() ).then( ( data ) => {\r\n                console.log( data );\r\n                setPic( data.url.toString() );\r\n            } ).catch( ( err ) => {\r\n                console.log( err );\r\n            } );\r\n        } else {\r\n            return setPicMessage( 'Please select an image' );\r\n        }\r\n\r\n    };\r\n\r\n\r\n    const submitHandler = ( e ) => {\r\n        e.preventDefault();\r\n        dispatch( createEventAction( title, content, category, pic ) );\r\n        if ( !title || !content || !category ) return;\r\n\r\n        resetHandler();\r\n        history.push( \"/myevents\" );\r\n    };\r\n\r\n    useEffect( () => { }, [] );\r\n\r\n    return (\r\n        <MainScreen title=\"Create an Event\">\r\n            <Card>\r\n                <Card.Header>Create a new Event</Card.Header>\r\n                <Card.Body>\r\n                    <Col md={ 6 }>\r\n                        <Form onSubmit={ submitHandler }>\r\n                            { error && <ErrorMessage variant=\"danger\">{ error }</ErrorMessage> }\r\n                            <Form.Group controlId=\"title\">\r\n                                <Form.Label>Title</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"title\"\r\n                                    value={ title }\r\n                                    placeholder=\"Enter the title\"\r\n                                    onChange={ ( e ) => setTitle( e.target.value ) }\r\n                                />\r\n                            </Form.Group>\r\n\r\n                            <Form.Group controlId=\"content\">\r\n                                <Form.Label>Content</Form.Label>\r\n                                <Form.Control\r\n                                    as=\"textarea\"\r\n                                    value={ content }\r\n                                    placeholder=\"Enter the content\"\r\n                                    rows={ 4 }\r\n                                    onChange={ ( e ) => setContent( e.target.value ) }\r\n                                />\r\n                            </Form.Group>\r\n                            { content && (\r\n                                <Card>\r\n                                    <Card.Header>Event Preview</Card.Header>\r\n                                    <Card.Body>\r\n                                        <ReactMarkdown>{ content }</ReactMarkdown>\r\n                                    </Card.Body>\r\n                                </Card>\r\n                            ) }\r\n\r\n                            <Form.Group controlId=\"content\">\r\n                                <Form.Label>Category</Form.Label>\r\n                                <Form.Control\r\n                                    type=\"content\"\r\n                                    value={ category }\r\n                                    placeholder=\"Enter the Category\"\r\n                                    onChange={ ( e ) => setCategory( e.target.value ) }\r\n                                />\r\n                            </Form.Group>\r\n                            { picMessage && (\r\n                                <ErrorMessage variant=\"danger\">{ picMessage }</ErrorMessage>\r\n                            ) }\r\n                            <Form.Group controlId=\"pic\">\r\n                                <Form.Label>Event Picture</Form.Label>\r\n                                <Form.File\r\n                                    onChange={ ( e ) => postDetails( e.target.files[ 0 ] ) }\r\n                                    id=\"custom-file\"\r\n                                    type=\"image/png\"\r\n                                    label=\"Upload Event Picture\"\r\n                                    custom\r\n                                />\r\n                            </Form.Group>\r\n                            { loading && <Loading size={ 50 } /> }\r\n                            <Button type=\"submit\" variant=\"primary\" style={ { marginTop: 10 } }>\r\n                                Create Event\r\n                            </Button>\r\n                            <Button className=\"mx-2\" onClick={ resetHandler } variant=\"danger\" style={ { marginTop: 10 } } >\r\n                                Reset Fields\r\n                            </Button>\r\n                        </Form>\r\n                    </Col>\r\n                </Card.Body>\r\n                <Card.Footer className=\"text-muted\">\r\n                    Creating on - { new Date().toLocaleDateString() }\r\n                </Card.Footer>\r\n            </Card>\r\n        </MainScreen>\r\n    );\r\n}\r\n\r\nexport default CreateEvent;"]},"metadata":{},"sourceType":"module"}