{"ast":null,"code":"import { NOTES_CREATE_FAIL, NOTES_CREATE_REQUEST, NOTES_CREATE_SUCCESS, NOTES_DELETE_FAIL, NOTES_DELETE_REQUEST, NOTES_DELETE_SUCCESS, NOTES_LIST_FAIL, NOTES_LIST_REQUEST, NOTES_LIST_SUCCESS, NOTES_UPDATE_FAIL, NOTES_UPDATE_REQUEST, NOTES_UPDATE_SUCCESS } from \"../constants/notesConstants\";\nimport axios from \"axios\";\nexport const listNotes = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_LIST_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/notes`, config);\n    dispatch({\n      type: NOTES_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: NOTES_LIST_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createNoteAction = (title, content, category) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/notes/create`, {\n      title,\n      content,\n      category\n    }, config);\n    dispatch({\n      type: NOTES_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: NOTES_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const deleteNoteAction = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.delete(`/api/notes/${id}`, config);\n    dispatch({\n      type: NOTES_DELETE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: NOTES_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateNoteAction = (id, title, content, category) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: NOTES_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/notes/${id}`, {\n      title,\n      content,\n      category\n    }, config);\n    dispatch({\n      type: NOTES_UPDATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: NOTES_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["E:/003_Personal_Portfolio/Experimental/event-manager/frontend/src/actions/notesAction.js"],"names":["NOTES_CREATE_FAIL","NOTES_CREATE_REQUEST","NOTES_CREATE_SUCCESS","NOTES_DELETE_FAIL","NOTES_DELETE_REQUEST","NOTES_DELETE_SUCCESS","NOTES_LIST_FAIL","NOTES_LIST_REQUEST","NOTES_LIST_SUCCESS","NOTES_UPDATE_FAIL","NOTES_UPDATE_REQUEST","NOTES_UPDATE_SUCCESS","axios","listNotes","dispatch","getState","type","userLogin","userInfo","config","headers","Authorization","token","data","get","payload","error","message","response","createNoteAction","title","content","category","post","deleteNoteAction","id","delete","updateNoteAction","put"],"mappings":"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","sourcesContent":["import {\r\n    NOTES_CREATE_FAIL,\r\n    NOTES_CREATE_REQUEST,\r\n    NOTES_CREATE_SUCCESS,\r\n    NOTES_DELETE_FAIL,\r\n    NOTES_DELETE_REQUEST,\r\n    NOTES_DELETE_SUCCESS,\r\n    NOTES_LIST_FAIL,\r\n    NOTES_LIST_REQUEST,\r\n    NOTES_LIST_SUCCESS,\r\n    NOTES_UPDATE_FAIL,\r\n    NOTES_UPDATE_REQUEST,\r\n    NOTES_UPDATE_SUCCESS,\r\n} from \"../constants/notesConstants\";\r\nimport axios from \"axios\";\r\n\r\nexport const listNotes = () => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch( {\r\n            type: NOTES_LIST_REQUEST,\r\n        } );\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${ userInfo.token }`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.get( `/api/notes`, config );\r\n\r\n        dispatch( {\r\n            type: NOTES_LIST_SUCCESS,\r\n            payload: data,\r\n        } );\r\n    } catch ( error ) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch( {\r\n            type: NOTES_LIST_FAIL,\r\n            payload: message,\r\n        } );\r\n    }\r\n};\r\n\r\nexport const createNoteAction = ( title, content, category ) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch( {\r\n            type: NOTES_CREATE_REQUEST,\r\n        } );\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${ userInfo.token }`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.post(\r\n            `/api/notes/create`,\r\n            { title, content, category },\r\n            config\r\n        );\r\n\r\n        dispatch( {\r\n            type: NOTES_CREATE_SUCCESS,\r\n            payload: data,\r\n        } );\r\n    } catch ( error ) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch( {\r\n            type: NOTES_CREATE_FAIL,\r\n            payload: message,\r\n        } );\r\n    }\r\n};\r\n\r\nexport const deleteNoteAction = ( id ) => async ( dispatch, getState ) => {\r\n    try {\r\n        dispatch( {\r\n            type: NOTES_DELETE_REQUEST,\r\n        } );\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${ userInfo.token }`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.delete( `/api/notes/${ id }`, config );\r\n\r\n        dispatch( {\r\n            type: NOTES_DELETE_SUCCESS,\r\n            payload: data,\r\n        } );\r\n    } catch ( error ) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch( {\r\n            type: NOTES_DELETE_FAIL,\r\n            payload: message,\r\n        } );\r\n    }\r\n};\r\n\r\nexport const updateNoteAction = ( id, title, content, category ) => async (\r\n    dispatch,\r\n    getState\r\n) => {\r\n    try {\r\n        dispatch( {\r\n            type: NOTES_UPDATE_REQUEST,\r\n        } );\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState();\r\n\r\n        const config = {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: `Bearer ${ userInfo.token }`,\r\n            },\r\n        };\r\n\r\n        const { data } = await axios.put(\r\n            `/api/notes/${ id }`,\r\n            { title, content, category },\r\n            config\r\n        );\r\n\r\n        dispatch( {\r\n            type: NOTES_UPDATE_SUCCESS,\r\n            payload: data,\r\n        } );\r\n    } catch ( error ) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message;\r\n        dispatch( {\r\n            type: NOTES_UPDATE_FAIL,\r\n            payload: message,\r\n        } );\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}